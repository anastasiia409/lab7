@page "/editprojects/{id:int}"
@using lab7.Models
@inject HttpClient httpClient

@{
	if(id == 0)
	{
		<h1>Add project</h1>
	}
	else
	{
		<h1>Edit project</h1>
	}
}



<EditForm Model="_project" OnValidSubmit="EditProject">
	<label for="name">Name project</label>
	<InputText @bind-Value="_project.Name" id="name" />
	<br/>
	<label>DateOfStart</label>
	<InputDate @bind-Value="_project.DateOfStart"/>
	<br/>
	<label>DateOfEnd</label>
	<InputDate @bind-Value="_project.DateOfEnd"  />
	<br/>
	<label>Description</label>
	<InputText @bind-Value="_project.Description"  />
	<br/>

	<DataAnnotationsValidator />
	<ValidationSummary />

	<button type="submit">Save changes</button>
	<button><a href="/projects">Return to all projects</a></button>

</EditForm>

@code {
	[Inject] NavigationManager navigationManager{ get; set; } = null!;
	private Project? _project = new Project();
	[Parameter] public int id { get; set; }


	protected override async Task OnParametersSetAsync()
	{
		if(id < 0)
		{
			navigationManager.NavigateTo("/employees");
		}

		if (id != 0)
		{
			_project = await httpClient.GetFromJsonAsync<Project>($"api/Project/{id}");
		}
	}

	private async Task EditProject()
	{
		if (id == 0)
		{
			if(_project!= null)
			{
				await httpClient.PostAsJsonAsync<Project>("api/Project/", _project);
			}
			else
			{
				navigationManager.NavigateTo("/projects");
			}
		}
		else
		{
			if (_project != null)
			{
				await httpClient.PutAsJsonAsync<Project>($"api/Project/", _project);
			}
			else
			{
				navigationManager.NavigateTo("/projects");
			}
		}
		navigationManager.NavigateTo("/projects");
	}
}